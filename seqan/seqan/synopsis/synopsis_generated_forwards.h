// ==========================================================================
//                 SeqAn - The Library for Sequence Analysis
// ==========================================================================
// Copyright (c) 2006-2010, Knut Reinert, FU Berlin
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
//       its contributors may be used to endorse or promote products derived
//       from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
// DAMAGE.
//
// ==========================================================================


#ifndef SEQAN_HEADER_SYNOPSIS_GENERATED_FORWARDS_H 
#define SEQAN_HEADER_SYNOPSIS_GENERATED_FORWARDS_H 

//////////////////////////////////////////////////////////////////////////////
// NOTE: This file is automatically generated by build_forwards.py
//       Do not edit this file manually!
//////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// CLASSES
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// BucketEntry_

template <typename TValue, typename TCount> struct BucketEntry_;       	// "extras/include/seqan/synopsis/counter_buckets.h"(64)

//____________________________________________________________________________
// Bucket_

template <typename TValue, typename TCount> struct Bucket_;       	// "extras/include/seqan/synopsis/counter_buckets.h"(60)
template <typename TValue, typename TCount> struct Bucket_;       	// "extras/include/seqan/synopsis/counter_buckets.h"(76)

//____________________________________________________________________________
// Buckets_

struct Buckets_;       	// "extras/include/seqan/synopsis/counter_buckets.h"(56)

//____________________________________________________________________________
// CmpTripleI2DescI3DescI1Asc_

template <typename T1, typename T2> struct CmpTripleI2DescI3DescI1Asc_;       	// "extras/include/seqan/synopsis/hot_list_base.h"(65)

//____________________________________________________________________________
// CounterBuckets

template <typename TValue, typename TCount> class CounterBuckets;       	// "extras/include/seqan/synopsis/counter_buckets.h"(88)

//____________________________________________________________________________
// Entries_

struct Entries_;       	// "extras/include/seqan/synopsis/counter_buckets.h"(53)

//____________________________________________________________________________
// Frequent_

struct Frequent_;       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(75)

//____________________________________________________________________________
// HistogramSet

template <typename TValue> class HistogramSet;       	// "extras/include/seqan/synopsis/histogram_set.h"(61)

//____________________________________________________________________________
// HotList

template <typename TValue, typename TSpec, typename TCallback > class HotList;       	// "extras/include/seqan/synopsis/hot_list_base.h"(59)

//____________________________________________________________________________
// LossyCounting_

struct LossyCounting_;       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(69)

//____________________________________________________________________________
// SpaceSaving_

struct SpaceSaving_;       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(71)

} //namespace seqan


//////////////////////////////////////////////////////////////////////////////
// TYPEDEFS
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// Buckets

typedef Tag<Buckets_> Buckets;       	// "extras/include/seqan/synopsis/counter_buckets.h"(57)

//____________________________________________________________________________
// Entries

typedef Tag<Entries_> Entries;       	// "extras/include/seqan/synopsis/counter_buckets.h"(54)

//____________________________________________________________________________
// Frequent

typedef Tag<Frequent_> Frequent;       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(76)

//____________________________________________________________________________
// LossyCounting

typedef Tag<LossyCounting_> LossyCounting;       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(70)

//____________________________________________________________________________
// SpaceSaving

typedef Tag<SpaceSaving_> SpaceSaving;       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(72)

} //namespace seqan


//////////////////////////////////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////////////////////////////////

namespace seqan {

//____________________________________________________________________________
// _callbackContext

template <typename TValue, typename TSpec, typename TCallback> inline TCallback & _callbackContext(HotList<TValue, TSpec, TCallback> & hotList);       	// "extras/include/seqan/synopsis/hot_list_base.h"(160)

//____________________________________________________________________________
// addCounter

template <typename TValue, typename TCount, typename TValue2> inline typename Iterator<CounterBuckets<TValue, TCount>, Entries>::Type addCounter(CounterBuckets<TValue, TCount> & buckets, TValue2 const & v);       	// "extras/include/seqan/synopsis/counter_buckets.h"(153)

//____________________________________________________________________________
// clear

template <typename TValue, typename TCount> inline void clear(CounterBuckets<TValue, TCount> & buckets);       	// "extras/include/seqan/synopsis/counter_buckets.h"(142)
template <typename TValue> inline void clear(HistogramSet<TValue> & hSet);       	// "extras/include/seqan/synopsis/histogram_set.h"(152)
template <typename TValue> inline void clear(HistogramSet<TValue> & hSet, unsigned idx);       	// "extras/include/seqan/synopsis/histogram_set.h"(159)
template <typename TValue, typename TCallback> inline void clear(HotList<TValue, Frequent, TCallback> & hotList);       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(122)
template <typename TValue, typename TCallback> inline void clear(HotList<TValue, LossyCounting, TCallback> & hotList);       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(117)
template <typename TValue, typename TCallback> inline void clear(HotList<TValue, SpaceSaving, TCallback> & hotList);       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(122)

//____________________________________________________________________________
// decreaseAllCounters

template <typename TValue, typename TCount> inline void decreaseAllCounters(CounterBuckets<TValue, TCount> & buckets);       	// "extras/include/seqan/synopsis/counter_buckets.h"(225)

//____________________________________________________________________________
// eraseCounter

template <typename TValue, typename TCount, typename TIterator> inline void eraseCounter(CounterBuckets<TValue, TCount> & buckets, TIterator it);       	// "extras/include/seqan/synopsis/counter_buckets.h"(174)

//____________________________________________________________________________
// getItems

template <typename TResult, typename TValue, typename TCallback> inline void getItems(TResult & items, HotList<TValue, Frequent, TCallback> const & hotList);       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(202)
template <typename TResult, typename TValue, typename TCallback> inline void getItems(TResult & items, HotList<TValue, LossyCounting, TCallback> const & hotList);       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(200)
template <typename TResult, typename TValue, typename TCallback> inline void getItems(TResult & items, HotList<TValue, SpaceSaving, TCallback> const & hotList);       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(206)

//____________________________________________________________________________
// getValue

template <typename TValue> inline TValue getValue(HistogramSet<TValue> const & hSet, unsigned hIdx, unsigned entryIdx);       	// "extras/include/seqan/synopsis/histogram_set.h"(192)

//____________________________________________________________________________
// hotListItemAdded

template <typename TValue, typename TCount> inline void hotListItemAdded(Nothing const & , TValue const & , TCount const & , TCount const & );       	// "extras/include/seqan/synopsis/hot_list_base.h"(133)

//____________________________________________________________________________
// hotListItemRemoved

template <typename TValue, typename TCount> inline void hotListItemRemoved(Nothing const & , TValue const & , TCount const & , TCount const & );       	// "extras/include/seqan/synopsis/hot_list_base.h"(149)

//____________________________________________________________________________
// increaseCounter

template <typename TValue, typename TCount, typename TIterator> inline void increaseCounter(CounterBuckets<TValue, TCount> & buckets, TIterator it);       	// "extras/include/seqan/synopsis/counter_buckets.h"(190)

//____________________________________________________________________________
// incrementValue

template <typename TValue, typename TValue2> inline void incrementValue(HistogramSet<TValue> & hSet, unsigned hIdx, unsigned entryIdx, TValue2 const & x);       	// "extras/include/seqan/synopsis/histogram_set.h"(218)

//____________________________________________________________________________
// registerItem

template <typename TValue, typename TCallback> inline typename Size<HotList<TValue, Frequent> >::Type registerItem(HotList<TValue, Frequent, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(134)
template <typename TValue, typename TCallback> inline typename Size<HotList<TValue, LossyCounting, TCallback> >::Type registerItem(HotList<TValue, LossyCounting, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(130)
template <typename TValue, typename TCallback> inline typename Size<HotList<TValue, SpaceSaving> >::Type registerItem(HotList<TValue, SpaceSaving, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(137)

//____________________________________________________________________________
// removeItem

template <typename TValue, typename TCallback> inline void removeItem(HotList<TValue, Frequent, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_frequent.h"(183)
template <typename TValue, typename TCallback> inline void removeItem(HotList<TValue, LossyCounting, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_lossy_counting.h"(180)
template <typename TValue, typename TCallback> inline void removeItem(HotList<TValue, SpaceSaving, TCallback> & hotList, TValue const & x);       	// "extras/include/seqan/synopsis/hot_list_space_saving.h"(189)

//____________________________________________________________________________
// setValue

template <typename TValue, typename TValue2> inline void setValue(HistogramSet<TValue> & hSet, unsigned hIdx, unsigned entryIdx, TValue2 const & x);       	// "extras/include/seqan/synopsis/histogram_set.h"(205)

//____________________________________________________________________________
// value

template <typename TValue, typename TCount> inline TCount value(BucketEntry_<TValue, TCount> const & entry);       	// "extras/include/seqan/synopsis/counter_buckets.h"(124)
template <typename TValue, typename TCount> inline TCount value(BucketEntry_<TValue, TCount> & entry);       	// "extras/include/seqan/synopsis/counter_buckets.h"(131)
template <typename TValue> inline typename Reference<HistogramSet<TValue> const>::Type value(HistogramSet<TValue> const & hSet, unsigned hIdx, unsigned entryIdx);       	// "extras/include/seqan/synopsis/histogram_set.h"(170)
template <typename TValue> inline typename Reference<HistogramSet<TValue> >::Type value(HistogramSet<TValue> & hSet, unsigned hIdx, unsigned entryIdx);       	// "extras/include/seqan/synopsis/histogram_set.h"(179)

} //namespace seqan

#endif

